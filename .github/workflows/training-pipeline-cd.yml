name: Training Pipeline CD

on:
  push:
    branches:
      - main
      - 'release/**'
    paths:
      - 'training_pipeline/**'
      - '.github/workflows/training-pipeline-cd.yml'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Extract branch name
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV

      - name: Set image tag
        id: set-tag
        run: |
          if [[ $BRANCH_NAME == release/* ]]; then
            VERSION=${BRANCH_NAME#release/}
            echo "TAG=${VERSION}" >> $GITHUB_ENV
          else
            echo "TAG=latest" >> $GITHUB_ENV
          fi
          echo "Using tag: ${{ env.TAG }}"

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./training_pipeline
          file: ./training_pipeline/Dockerfile
          push: true
          tags: |
            yourusername/training-pipeline:${{ env.TAG }}
          cache-from: type=registry,ref=yourusername/training-pipeline:buildcache
          cache-to: type=registry,ref=yourusername/training-pipeline:buildcache,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure Docker for GCP
        run: gcloud auth configure-docker

      - name: Deploy training job
        run: |
          echo "Deploying training pipeline with tag: ${{ env.TAG }}"
          # Burada eğitim modelini deploy etmek için gerekli komutları ekleyin
          # Örnek: gcloud ai-platform jobs submit training ... 